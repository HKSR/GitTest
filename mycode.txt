print("Hello")
print("ONLINE CODE")
# import _thread
from tkinter import *
from tkinter import filedialog
from docx import Document
from pptx import Presentation
from fitz import open as PDF
import win32com.client as Windows
import openpyxl as xl
from openpyxl.styles import Font
from openpyxl.worksheet.dimensions import ColumnDimension
import os
import re
class Format:
    Purple = '\033[95m'
    Cyan = '\033[96m'
    DarkCyan = '\033[36m'
    Blue = '\033[94m'
    Green = '\033[92m'
    Yellow = '\033[93m'
    Red = '\033[91m'
    Bold = '\033[1m'
    Underline = '\033[4m'
    End = '\033[0m'
# Prepping GUI
gui = Tk()
gui.title('FileKeywordFinder')
icon = PhotoImage(file=r"C:\Users\Sharmila\Desktop\Finance is Fun Website\mainsite7\DownloadIcon.png")
gui.iconphoto(False, icon)
gui.configure(bg="#0033cc")
scrwidth = gui.winfo_screenwidth()
scrheight = gui.winfo_screenheight()
xcoord = (scrwidth/2) - (750/2)
ycoord = (scrheight/2) - (500/2)
gui.geometry('%dx%d+%d+%d' % (750, 500, xcoord, ycoord-30))

folderPath = filedialog.askdirectory()
folderPath = re.sub('/', '\\\\', folderPath)
print(folderPath)
filesList = os.listdir(folderPath)
print(filesList)
acceptedFileFormats = ["docx", "doc", "pptx", "ppt", "pdf", "rtf"]
keywords=[]
try:
    keywords = open(folderPath + "\\" +"keywords.txt", "r").read().split(", ")
except FileNotFoundError:
    print("Couldn't find a valid keywords file, make sure the file name is keywords.txt and that it is stored in the same directory.")
    exit()
keywordsLen = len(keywords)
print(keywords)
initFilesListLen = len(filesList)
filesListIndexCount = 0
for z in range(initFilesListLen):
    currFilesListLen = len(filesList)
    fileExtentionFinder = filesList[filesListIndexCount].split(".")
    if fileExtentionFinder[-1] not in acceptedFileFormats:
        print("non docx file found at index", filesListIndexCount)
        filesList[filesListIndexCount] = " "
        filesListIndexCountCopy = filesListIndexCount
        print("copy", filesListIndexCountCopy)
        forloopIterationCount = currFilesListLen - (filesListIndexCountCopy + 1)
        print("forloop iterations", forloopIterationCount)
        for i in range(forloopIterationCount):
            filesList[filesListIndexCountCopy] = filesList[filesListIndexCountCopy + 1]
            filesListIndexCountCopy = filesListIndexCountCopy + 1
        del filesList[-1]
        #filesListIndexCount = filesListIndexCount + 1
        print(filesList)
    elif fileExtentionFinder[-1] in acceptedFileFormats:
        filesListIndexCount = filesListIndexCount + 1
    else:
        print("an unknown error occurred.")
finalFilesListLen = len(filesList)
continueConfirmation = (str(input("Are these the correct files? y or n: ")))
count = 0
y = 0
if continueConfirmation == "y":
    reportBook = xl.Workbook()
    reportSheet = reportBook.active
    reportSheet.title = "Report"
    #keywordsXl = [""] + keywords
    reportSheet.append([""] + keywords)
    for k in range(finalFilesListLen):
        for b in range(keywordsLen):
            reportSheet.cell(row=k+2, column=b+2).value = int(0)
    f = 1
    for j in range(keywordsLen + 1):
        reportSheet.cell(row=1, column=f).font = Font(bold=True)
        f = f + 1
    s = 2
    for h in range(finalFilesListLen):
        reportSheet['a' + str(s)] = filesList[h]
        reportSheet['a' + str(s)].font = Font(bold=True)
        s = s + 1
    try:
        while count<1:
            if filesList[y].split(".")[-1] == "docx":
                docxDoc = Document(folderPath + "\\" + filesList[y])
                #print(folderPath + "\\" + filesList[0])
                #print(len(docxDoc.paragraphs))
                #print(y)
                x = len(docxDoc.paragraphs)
                i=0
                for x in range(x):
                    currPara = docxDoc.paragraphs[i].text
                    #print(docxDoc.paragraphs[i].text)
                    currPara = currPara.lower()
                    r = 0
                    for e in range(keywordsLen):
                        #occurrences = 0
                        if re.search(r"\b" + keywords[r] + r"\b", currPara) != None:
                            #occurrences = occurrences + 1
                            reportSheet.cell(row=y + 2, column=r + 2).value = reportSheet.cell(row=y + 2, column=r + 2).value + 1
                            #print(occurrences)
                            currPara = re.sub(r"\b" + keywords[r] + r"\b", Format.Bold + Format.Underline + keywords[r] + Format.End, currPara)
                        else:
                            pass
                            #print(keywords[r], " is not present")
                        r = r + 1
                    i = i + 1
                    print(currPara)
            elif filesList[y].split(".")[-1] == "doc":
                word = Windows.Dispatch("Word.Application")
                word.Visible = False
                docxDoc = word.Documents.Open(FileName=folderPath + "\\" + filesList[y], Encoding='gbk')
                #docxDoc = Document(folderPath + "\\" + filesList[y])
                #print(folderPath + "\\" + filesList[0])
                #print(len(docxDoc.paragraphs))
                #print(y)
                x = len(docxDoc.paragraphs)
                i=0
                for x in range(x):
                    currPara = docxDoc.paragraphs[i].Range.Text
                    #print(docxDoc.paragraphs[i].text)
                    currPara = currPara.lower()
                    r = 0
                    for e in range(keywordsLen):
                        if re.search(r"\b" + keywords[r] + r"\b", currPara) != None:
                            currPara = re.sub(r"\b" + keywords[r] + r"\b", Format.Bold + Format.Underline + keywords[r] + Format.End, currPara)
                            reportSheet.cell(row=y + 2, column=r + 2).value = reportSheet.cell(row=y + 2, column=r + 2).value + 1
                        else:
                            pass
                            #print(keywords[r], " is not present")
                        r = r + 1
                    i = i + 1
                    print(currPara)
                docxDoc.Close()
                word.Quit()
            elif filesList[y].split(".")[-1] == "rtf":
                word = Windows.Dispatch("Word.Application")
                word.Visible = False
                docxDoc = word.Documents.Open(FileName=folderPath + "\\" + filesList[y], Encoding='gbk')
                #docxDoc = Document(folderPath + "\\" + filesList[y])
                #print(folderPath + "\\" + filesList[0])
                #print(len(docxDoc.paragraphs))
                #print(y)
                x = len(docxDoc.paragraphs)
                i=0
                for x in range(x):
                    currPara = docxDoc.paragraphs[i].Range.Text
                    #print(docxDoc.paragraphs[i].text)
                    currPara = currPara.lower()
                    r = 0
                    for e in range(keywordsLen):
                        if re.search(r"\b" + keywords[r] + r"\b", currPara) != None:
                            currPara = re.sub(r"\b" + keywords[r] + r"\b", Format.Bold + Format.Underline + keywords[r] + Format.End, currPara)
                            reportSheet.cell(row=y + 2, column=r + 2).value = reportSheet.cell(row=y + 2, column=r + 2).value + 1
                        else:
                            pass
                            #print(keywords[r], " is not present")
                        r = r + 1
                    i = i + 1
                    print(currPara)
                docxDoc.Close()
                word.Quit()
            elif filesList[y].split(".")[-1] == "pptx":
                docxDoc = Presentation(folderPath + "\\" + filesList[y])
                #print(folderPath + "\\" + filesList[0])
                #print(len(docxDoc.paragraphs))
                #print(y)
                i=0
                for slide in docxDoc.slides:
                    for shape in slide.shapes:
                        if hasattr(shape, "text"):
                            currPara = shape.text
                            #print(docxDoc.paragraphs[i].text)
                            currPara = currPara.lower()
                            r = 0
                            for e in range(keywordsLen):
                                if re.search(r"\b" + keywords[r] + r"\b", currPara) != None:
                                    currPara = re.sub(r"\b" + keywords[r] + r"\b", Format.Bold + Format.Underline + keywords[r] + Format.End, currPara)
                                    reportSheet.cell(row=y + 2, column=r + 2).value = reportSheet.cell(row=y + 2, column=r + 2).value + 1
                                else:
                                    pass
                                    #print(keywords[r], " is not present")
                                r = r + 1
                            i = i + 1
                            print(currPara)
            elif filesList[y].split(".")[-1] == "ppt":
                powerpoint = Windows.Dispatch("Powerpoint.Application")
                powerpoint.Visible = True
                docxDoc = powerpoint.Presentations.Open(FileName=folderPath + "\\" + filesList[y])
                #docxDoc = Document(folderPath + "\\" + filesList[y])
                #print(folderPath + "\\" + filesList[0])
                #print(len(docxDoc.paragraphs))
                #print(y)
                #x = len(docxDoc.paragraphs)
                #i=0
                for i in range(1, docxDoc.Slides.Count + 1):
                    for x in range(1, docxDoc.Slides(i).Shapes.Count + 1):
                        if docxDoc.Slides(i).Shapes(x).Hastextframe:
                            paragraphsLen = len(docxDoc.Slides(i).Shapes(x).TextFrame.TextRange.Paragraphs())
                            l = 0
                            for q in range(paragraphsLen):
                                if l<1:
                                    l = l + 1
                                    #print("ifloop")
                                    continue
                                else:
                                    currPara = docxDoc.Slides(i).Shapes(x).TextFrame.TextRange.Paragraphs(q).text
                                    #print(q)
                                    #print(docxDoc.paragraphs[i].text)
                                    currPara = currPara.lower()
                                    r = 0
                                    for e in range(keywordsLen):
                                        if re.search(r"\b" + keywords[r] + r"\b", currPara) != None:
                                            currPara = re.sub(r"\b" + keywords[r] + r"\b", Format.Bold + Format.Underline + keywords[r] + Format.End, currPara)
                                            reportSheet.cell(row=y + 2, column=r + 2).value = reportSheet.cell(row=y + 2, column=r + 2).value + 1
                                            print("loop")
                                        else:
                                            pass
                                            #print(keywords[r], " is not present")
                                        r = r + 1
                                    print(currPara)
                            currPara = docxDoc.Slides(i).Shapes(x).TextFrame.TextRange.Paragraphs(paragraphsLen).text
                            # print(docxDoc.paragraphs[i].text)
                            currPara = currPara.lower()
                            r = 0
                            for e in range(keywordsLen):
                                if re.search(r"\b" + keywords[r] + r"\b", currPara) != None:
                                    currPara = re.sub(r"\b" + keywords[r] + r"\b",
                                                        Format.Bold + Format.Underline + keywords[r] + Format.End,
                                                        currPara)
                                    reportSheet.cell(row=y + 2, column=r + 2).value = reportSheet.cell(row=y + 2, column=r + 2).value + 1
                                else:
                                    pass
                                    #print(keywords[r], " is not present")
                                r = r + 1
                            print(currPara)
                docxDoc.Close()
                powerpoint.Quit()
            elif filesList[y].split(".")[-1] == "pdf":
                docxDoc = PDF(folderPath + "\\" + filesList[y])
                #print(folderPath + "\\" + filesList[0])
                #print(len(docxDoc.paragraphs))
                #print(y)
                i=0
                for page in docxDoc:
                    currPara = page.getText()
                    #print(docxDoc.paragraphs[i].text)
                    currPara = currPara.lower()
                    r = 0
                    for e in range(keywordsLen):
                        if re.search(r"\b" + keywords[r] + r"\b", currPara) != None:
                            currPara = re.sub(r"\b" + keywords[r] + r"\b", Format.Bold + Format.Underline + keywords[r] + Format.End, currPara)
                            reportSheet.cell(row=y + 2, column=r + 2).value = reportSheet.cell(row=y + 2, column=r + 2).value + 1
                        else:
                            pass
                            #print(keywords[r], " is not present")
                        r = r + 1
                    i = i + 1
                    print(currPara)
            y = y + 1
            #print(y)
            if y==finalFilesListLen:
                break
    except KeyboardInterrupt:
        print("1 or more documents not found/invalid file formats")
        print("Make sure the folder does not contain any subfolders or documents that are not in the .docx format")
    reportSheet.column_dimensions['a'] = ColumnDimension(reportSheet, auto_size=True)
    reportBook.save(filename=folderPath + "\\" + "Report.xlsx")
elif continueConfirmation == "n":
    print("Restart and try again!")
else:
    print("Invalid input!")
    print("Restart and try again!")
gui.mainloop()
